From 7caea0cb01b2170e00ded1e605dc9fa0e7b06fe7 Mon Sep 17 00:00:00 2001
From: Ilya Fedin <fedin-ilja2010@ya.ru>
Date: Sat, 6 Nov 2021 16:18:56 +0400
Subject: [PATCH] Use webkitgtk without its headers

---
 CMakeLists.txt                                | 20 ++----
 webview/platform/linux/webview_linux.cpp      | 11 ---
 .../linux/webview_linux_webkit2gtk.cpp        |  4 --
 .../linux/webview_linux_webkit2gtk_dummy.cpp  | 28 ++++++++
 .../platform/linux/webview_linux_webkit_gtk.h | 67 +++++++++++++++++--
 5 files changed, 97 insertions(+), 33 deletions(-)
 create mode 100644 webview/platform/linux/webview_linux_webkit2gtk_dummy.cpp

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0b50880..a93c8c2 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -24,6 +24,7 @@ PRIVATE
     webview/platform/linux/webview_linux_webkit_gtk.cpp
     webview/platform/linux/webview_linux_webkit_gtk.h
     webview/platform/linux/webview_linux_webkit2gtk.cpp
+    webview/platform/linux/webview_linux_webkit2gtk_dummy.cpp
     webview/platform/linux/webview_linux_webkit2gtk.h
 
     webview/platform/win/webview_win.cpp
@@ -48,22 +49,13 @@ if (WIN32)
     nuget_add_webview(lib_webview)
     nuget_add_winrt(lib_webview)
 elseif (LINUX)
-    if (NOT DESKTOP_APP_DISABLE_WEBKITGTK)
-        find_package(PkgConfig REQUIRED)
-
-        pkg_check_modules(GTK3 REQUIRED gtk+-3.0)
-        target_include_directories(lib_webview SYSTEM PUBLIC ${GTK3_INCLUDE_DIRS})
-
-        pkg_check_modules(WEBKIT REQUIRED webkit2gtk-4.0)
-        target_include_directories(lib_webview SYSTEM PUBLIC ${WEBKIT_INCLUDE_DIRS})
-
-        target_link_libraries(lib_webview PUBLIC ${CMAKE_DL_LIBS})
-    else()
+    if (DESKTOP_APP_DISABLE_DBUS_INTEGRATION)
         remove_target_sources(lib_webview ${src_loc}
-            webview/platform/linux/webview_linux_webkit_gtk.cpp
-            webview/platform/linux/webview_linux_webkit_gtk.h
             webview/platform/linux/webview_linux_webkit2gtk.cpp
-            webview/platform/linux/webview_linux_webkit2gtk.h
+        )
+    else()
+        remove_target_sources(lib_webview ${src_loc}
+            webview/platform/linux/webview_linux_webkit2gtk_dummy.cpp
         )
     endif()
 endif()
diff --git a/webview/platform/linux/webview_linux.cpp b/webview/platform/linux/webview_linux.cpp
index 9401a3f..fb38cc7 100644
--- a/webview/platform/linux/webview_linux.cpp
+++ b/webview/platform/linux/webview_linux.cpp
@@ -11,14 +11,7 @@
 namespace Webview {
 
 Available Availability() {
-#ifndef DESKTOP_APP_DISABLE_WEBKITGTK
 	return WebKit2Gtk::Availability();
-#else // !DESKTOP_APP_DISABLE_WEBKITGTK
-	return Available{
-		.error = Available::Error::NoGtkOrWebkit2Gtk,
-		.details = "This feature was disabled at build time.",
-	};
-#endif // DESKTOP_APP_DISABLE_WEBKITGTK
 }
 
 bool SupportsEmbedAfterCreate() {
@@ -26,11 +19,7 @@ bool SupportsEmbedAfterCreate() {
 }
 
 std::unique_ptr<Interface> CreateInstance(Config config) {
-#ifndef DESKTOP_APP_DISABLE_WEBKITGTK
 	return WebKit2Gtk::CreateInstance(std::move(config));
-#else // !DESKTOP_APP_DISABLE_WEBKITGTK
-	return nullptr;
-#endif // DESKTOP_APP_DISABLE_WEBKITGTK
 }
 
 } // namespace Webview
diff --git a/webview/platform/linux/webview_linux_webkit2gtk.cpp b/webview/platform/linux/webview_linux_webkit2gtk.cpp
index ac9f69d..25a7859 100644
--- a/webview/platform/linux/webview_linux_webkit2gtk.cpp
+++ b/webview/platform/linux/webview_linux_webkit2gtk.cpp
@@ -6,10 +6,6 @@
 //
 #include "webview/platform/linux/webview_linux_webkit2gtk.h"
 
-#ifdef DESKTOP_APP_DISABLE_DBUS_INTEGRATION
-#error "WebKitGTK support depends on D-Bus integration."
-#endif // DESKTOP_APP_DISABLE_DBUS_INTEGRATION
-
 #include "webview/platform/linux/webview_linux_webkit_gtk.h"
 #include "base/platform/linux/base_linux_glibmm_helper.h"
 #include "base/platform/linux/base_linux_dbus_utilities.h"
diff --git a/webview/platform/linux/webview_linux_webkit2gtk_dummy.cpp b/webview/platform/linux/webview_linux_webkit2gtk_dummy.cpp
new file mode 100644
index 0000000..85d0841
--- /dev/null
+++ b/webview/platform/linux/webview_linux_webkit2gtk_dummy.cpp
@@ -0,0 +1,28 @@
+// This file is part of Desktop App Toolkit,
+// a set of libraries for developing nice desktop applications.
+//
+// For license and copyright information please follow this link:
+// https://github.com/desktop-app/legal/blob/master/LEGAL
+//
+#include "webview/platform/linux/webview_linux_webkit2gtk.h"
+
+namespace Webview::WebKit2Gtk {
+
+Available Availability() {
+	return Available{
+		.error = Available::Error::NoGtkOrWebkit2Gtk,
+		.details = "This feature was disabled at build time.",
+	};
+}
+
+std::unique_ptr<Interface> CreateInstance(Config config) {
+	return nullptr;
+}
+
+int Exec(const std::string &parentDBusName) {
+}
+
+void SetServiceName(const std::string &serviceName) {
+}
+
+} // namespace Webview::WebKit2Gtk
diff --git a/webview/platform/linux/webview_linux_webkit_gtk.h b/webview/platform/linux/webview_linux_webkit_gtk.h
index b1ebcee..7e650b4 100644
--- a/webview/platform/linux/webview_linux_webkit_gtk.h
+++ b/webview/platform/linux/webview_linux_webkit_gtk.h
@@ -6,12 +6,71 @@
 //
 #pragma once
 
-#include <JavaScriptCore/JavaScript.h>
-#include <gtk/gtk.h>
-#include <webkit2/webkit2.h>
+#include <gio/gio.h>
+
+#define GTK_TYPE_CONTAINER (gtk_container_get_type ())
+#define GTK_CONTAINER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_CONTAINER, GtkContainer))
+
+#define GTK_TYPE_WIDGET (gtk_widget_get_type ())
+#define GTK_WIDGET(widget) (G_TYPE_CHECK_INSTANCE_CAST ((widget), GTK_TYPE_WIDGET, GtkWidget))
+
+#define GTK_TYPE_WINDOW (gtk_window_get_type ())
+#define GTK_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_WINDOW, GtkWindow))
+
+#define WEBKIT_TYPE_NAVIGATION_POLICY_DECISION (webkit_navigation_policy_decision_get_type())
+#define WEBKIT_NAVIGATION_POLICY_DECISION(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), WEBKIT_TYPE_NAVIGATION_POLICY_DECISION, WebKitNavigationPolicyDecision))
+
+#define WEBKIT_TYPE_WEB_VIEW (webkit_web_view_get_type())
+#define WEBKIT_WEB_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), WEBKIT_TYPE_WEB_VIEW, WebKitWebView))
+
+typedef struct _GdkWindow GdkWindow;
+typedef struct _GtkContainer GtkContainer;
+typedef struct _GtkWidget GtkWidget;
+typedef struct _GtkWindow GtkWindow;
 
-// Let it build with older WebKitGTK
 typedef struct _JSCValue JSCValue;
+typedef const struct OpaqueJSContext *JSContextRef;
+typedef struct OpaqueJSContext *JSGlobalContextRef;
+typedef struct OpaqueJSString *JSStringRef;
+typedef const struct OpaqueJSValue* JSValueRef;
+
+typedef struct _WebKitJavascriptResult WebKitJavascriptResult;
+typedef struct _WebKitNavigationAction WebKitNavigationAction;
+typedef struct _WebKitNavigationPolicyDecision WebKitNavigationPolicyDecision;
+typedef struct _WebKitPolicyDecision WebKitPolicyDecision;
+typedef struct _WebKitURIRequest WebKitURIRequest;
+typedef struct _WebKitUserContentManager WebKitUserContentManager;
+typedef struct _WebKitUserScript WebKitUserScript;
+typedef struct _WebKitWebView WebKitWebView;
+typedef struct _WebKitSettings WebKitSettings;
+
+typedef enum {
+	GTK_WINDOW_TOPLEVEL,
+	GTK_WINDOW_POPUP,
+} GtkWindowType;
+
+typedef enum {
+	WEBKIT_LOAD_STARTED,
+	WEBKIT_LOAD_REDIRECTED,
+	WEBKIT_LOAD_COMMITTED,
+	WEBKIT_LOAD_FINISHED,
+} WebKitLoadEvent;
+
+typedef enum {
+	WEBKIT_POLICY_DECISION_TYPE_NAVIGATION_ACTION,
+	WEBKIT_POLICY_DECISION_TYPE_NEW_WINDOW_ACTION,
+	WEBKIT_POLICY_DECISION_TYPE_RESPONSE,
+} WebKitPolicyDecisionType;
+
+typedef enum {
+	WEBKIT_USER_CONTENT_INJECT_ALL_FRAMES,
+	WEBKIT_USER_CONTENT_INJECT_TOP_FRAME,
+} WebKitUserContentInjectedFrames;
+
+typedef enum {
+	WEBKIT_USER_SCRIPT_INJECT_AT_DOCUMENT_START,
+	WEBKIT_USER_SCRIPT_INJECT_AT_DOCUMENT_END,
+} WebKitUserScriptInjectionTime;
 
 namespace Webview::WebkitGtk {
 
-- 
2.33.1

