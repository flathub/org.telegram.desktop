id: org.telegram.desktop
runtime: org.freedesktop.Platform
runtime-version: '24.08'
sdk: org.freedesktop.Sdk
command: telegram-desktop
rename-icon: telegram
finish-args:
  - --share=ipc
  - --share=network
  - --socket=wayland
  - --socket=fallback-x11
  - --socket=pulseaudio
  - --device=all
  - --talk-name=org.gnome.Mutter.IdleMonitor
  - --talk-name=org.kde.StatusNotifierWatcher
  - --talk-name=com.canonical.AppMenu.Registrar
  - --talk-name=com.canonical.indicator.application
  - --talk-name=org.ayatana.indicator.application
  - --talk-name=org.sigxcpu.Feedback
  - --unset-env=QT_PLUGIN_PATH
  - --env=PATH=/app/lib/webview/bin:/app/bin:/usr/bin
sdk-extensions:
  - org.freedesktop.Sdk.Extension.llvm19
add-extensions:
  org.freedesktop.Platform.ffmpeg-full:
    directory: lib/ffmpeg
    add-ld-path: .
    version: '24.08'
    autodownload: true
    autodelete: false
  org.telegram.desktop.webview:
    directory: lib/webview
    add-ld-path: lib
    version: stable
    autodownload: true
    autodelete: true
cleanup-commands:
  - mkdir -p ${FLATPAK_DEST}/lib/ffmpeg
  - mkdir -p ${FLATPAK_DEST}/lib/webview
build-options:
  append-path: /usr/lib/sdk/llvm19/bin
  append-ld-library-path: /usr/lib/sdk/llvm19/lib
cleanup:
  - /doc
  - /include
  - /lib/cmake
  - /lib/libexec
  - /lib/metatypes
  - /lib/pkgconfig
  - /lib/systemd
  - /mkspecs
  - /modules
  - /share/doc
  - /share/man
  - '*.prl'
  - '*.la'
  - '*.a'
modules:
  - name: yasm
    buildsystem: cmake-ninja
    config-opts:
      - -DCMAKE_BUILD_TYPE=None
    sources:
      - type: archive
        url: https://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz
        sha256: 3dce6601b495f5b3d45b59f7d2492a340ee7e84b5beca17e48f862502bd5603f
        x-checker-data:
          type: anitya
          project-id: 5286
          url-template: https://www.tortall.net/projects/yasm/releases/yasm-$version.tar.gz
    cleanup:
      - '*'

  - name: jinja2
    buildsystem: simple
    build-commands:
      - pip3 install --exists-action=i --no-index --find-links="file://${PWD}" --prefix=${FLATPAK_DEST}
        flit-core --no-build-isolation
      - pip3 install --exists-action=i --no-index --find-links="file://${PWD}" --prefix=${FLATPAK_DEST}
        "Jinja2" --no-build-isolation
    sources:
      - type: file
        url: https://files.pythonhosted.org/packages/d5/ae/09427bea9227a33ec834ed5461432752fd5d02b14f93dd68406c91684622/flit_core-3.10.1.tar.gz
        sha256: 66e5b87874a0d6e39691f0e22f09306736b633548670ad3c09ec9db03c5662f7
        x-checker-data:
          type: pypi
          name: flit-core
      - type: file
        url: https://files.pythonhosted.org/packages/b2/97/5d42485e71dfc078108a86d6de8fa46db44a1a9295e89c5d6d4a06e23a62/markupsafe-3.0.2.tar.gz
        sha256: ee55d3edf80167e48ea11a923c7386f4669df67d7994554387f84e7d8b0a2bf0
        x-checker-data:
          type: pypi
          name: MarkupSafe
      - type: file
        url: https://files.pythonhosted.org/packages/af/92/b3130cbbf5591acf9ade8708c365f3238046ac7cb8ccba6e81abccb0ccff/jinja2-3.1.5.tar.gz
        sha256: 8fefff8dc3034e27bb80d67c671eb8a9bc424c0ef4c0826edbff304cceff43bb
        x-checker-data:
          type: pypi
          name: Jinja2
    cleanup:
      - '*'

  - name: systemd
    buildsystem: meson
    builddir: true
    config-opts:
      - --buildtype=plain
      - -Drootprefix=/app
    make-args:
      - systemd-detect-virt
    no-make-install: true
    post-install:
      - install -D systemd-detect-virt "$FLATPAK_DEST/bin"
    sources:
      - type: archive
        url: https://github.com/systemd/systemd/archive/v257.2/systemd-257.2.tar.gz
        sha256: 7f2bc3253e4f87578132c5e433ef9ff7e8fee01d9eb5a5b7c64376d617f694d0
        x-checker-data:
          type: json
          url: https://api.github.com/repos/systemd/systemd/releases/latest
          tag-query: .tag_name
          timestamp-query: .published_at
          version-query: $tag | sub("^[vV]"; "")
          url-query: '"https://github.com/systemd/systemd/archive/\($tag)/systemd-\($version).tar.gz"'
      - type: shell
        commands:
          - 'sed -i "/systemd-detect-virt/,/link_with/ s/link_with : \\[libshared\\]/link_with
            : [libshared_static, libsystemd_static, libbasic]/" meson.build'

  - name: boost
    buildsystem: simple
    build-commands:
      - ./bootstrap.sh --prefix=${FLATPAK_DEST} --with-libraries=regex
      - ./b2 variant=release link=shared runtime-link=shared cxxflags="$CXXFLAGS"
        linkflags="$LDFLAGS" -j $FLATPAK_BUILDER_N_JOBS install
    sources:
      - type: archive
        url: https://boostorg.jfrog.io/artifactory/main/release/1.87.0/source/boost_1_87_0.tar.bz2
        sha256: af57be25cb4c4f4b413ed692fe378affb4352ea50fbe294a11ef548f4d527d89
        x-checker-data:
          type: anitya
          project-id: 6845
          stable-only: true
          url-template: https://boostorg.jfrog.io/artifactory/main/release/$version/source/boost_${major}_${minor}_${patch}.tar.bz2
          url-query: '"https://github.com/strukturag/libheif/archive/\($tag)/libheif-\($version).tar.gz"'

  - name: ada
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=None
      - -DBUILD_TESTING=OFF
      - -DADA_TOOLS=OFF
    sources:
      - type: git
        url: https://github.com/ada-url/ada.git
        commit: 8d3068ea141f4047d7bdae3383fc7f63d16201d9
        tag: v3.1.0
        x-checker-data:
          type: json
          url: https://api.github.com/repos/ada-url/ada/releases/latest
          tag-query: .tag_name
          timestamp-query: .published_at
          version-query: $tag | sub("^[vV]"; "")

  - name: protobuf
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=None
      - -DBUILD_SHARED_LIBS=ON
      - -Dprotobuf_BUILD_TESTS=OFF
    sources:
      - type: git
        url: https://github.com/protocolbuffers/protobuf.git
        commit: b407e8416e3893036aee5af9a12bd9b6a0e2b2e6
        tag: v29.3
        x-checker-data:
          type: json
          url: https://api.github.com/repos/protocolbuffers/protobuf/releases/latest
          tag-query: .tag_name
          timestamp-query: .published_at
          version-query: $tag | sub("^[vV]"; "")
    cleanup:
      - /bin

  - name: libde265
    buildsystem: cmake-ninja
    config-opts:
      - -DCMAKE_BUILD_TYPE=None
      - -DENABLE_SDL=OFF
    sources:
      - type: archive
        url: https://github.com/strukturag/libde265/archive/v1.0.15/libde265-1.0.15.tar.gz
        sha256: d4e55706dfc5b2c5c9702940b675ce2d3e7511025c6894eaddcdbaf0b15fd3f3
        x-checker-data:
          type: json
          url: https://api.github.com/repos/strukturag/libde265/releases/latest
          tag-query: .tag_name
          timestamp-query: .published_at
          version-query: $tag | sub("^[vV]"; "")
          url-query: '"https://github.com/strukturag/libde265/archive/\($tag)/libde265-\($version).tar.gz"'
    cleanup:
      - /bin

  - name: libheif
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=None
      - -DCMAKE_COMPILE_WARNING_AS_ERROR=OFF
      - -DCMAKE_DISABLE_FIND_PACKAGE_Doxygen=ON
      - -DBUILD_TESTING=OFF
      - -DWITH_FFMPEG_DECODER=ON
      - -DWITH_EXAMPLES=OFF
    sources:
      - type: archive
        url: https://github.com/strukturag/libheif/archive/v1.19.5/libheif-1.19.5.tar.gz
        sha256: 5cd9a3e28493310358e1c1299cd596cc4c7ae5fb985eceb758fa6141424e58bb
        x-checker-data:
          type: json
          url: https://api.github.com/repos/strukturag/libheif/releases/latest
          tag-query: .tag_name
          timestamp-query: .published_at
          version-query: $tag | sub("^[vV]"; "")
          url-query: '"https://github.com/strukturag/libheif/archive/\($tag)/libheif-\($version).tar.gz"'

  - name: jpegli
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=None
      - -DBUILD_TESTING=OFF
      - -DJPEGXL_ENABLE_DEVTOOLS=OFF
      - -DJPEGXL_ENABLE_TOOLS=OFF
      - -DJPEGXL_INSTALL_JPEGLI_LIBJPEG=ON
      - -DJPEGXL_ENABLE_DOXYGEN=OFF
      - -DJPEGXL_ENABLE_MANPAGES=OFF
      - -DJPEGXL_ENABLE_BENCHMARK=OFF
      - -DJPEGXL_ENABLE_EXAMPLES=OFF
      - -DJPEGXL_ENABLE_JNI=OFF
      - -DJPEGXL_ENABLE_SJPEG=OFF
      - -DJPEGXL_ENABLE_OPENEXR=OFF
      - -DJPEGXL_ENABLE_SKCMS=OFF
      - -DJPEGXL_FORCE_SYSTEM_BROTLI=ON
      - -DJPEGXL_FORCE_SYSTEM_LCMS=ON
      - -DJPEGXL_FORCE_SYSTEM_HWY=ON
    post-install:
      - rm "$FLATPAK_DEST"/lib/libjxl*
    sources:
      - type: git
        url: https://github.com/libjxl/libjxl.git
        commit: 794a5dcf0d54f9f0b20d288a12e87afb91d20dfc
        tag: v0.11.1
        x-checker-data:
          type: json
          url: https://api.github.com/repos/libjxl/libjxl/releases/latest
          tag-query: .tag_name
          timestamp-query: .published_at
          version-query: $tag | sub("^[vV]"; "")

  - name: rnnoise
    config-opts:
      - --disable-static
      - --disable-examples
      - --disable-doc
    sources:
      - type: git
        url: https://gitlab.xiph.org/xiph/rnnoise.git
        commit: 7f449bf8bd3b933891d12c30112268c4090e4d59

  - name: qtbase
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=None
      - -DINSTALL_ARCHDATADIR=/app/lib
      - -DINPUT_openssl=linked
    sources:
      - type: archive
        url: https://download.qt.io/archive/qt/6.8/6.8.2/submodules/qtbase-everywhere-src-6.8.2.tar.xz
        sha256: 012043ce6d411e6e8a91fdc4e05e6bedcfa10fcb1347d3c33908f7fdd10dfe05
        x-checker-data:
          type: anitya
          project-id: 7927
          url-template: https://download.qt.io/archive/qt/$major.$minor/$version/submodules/qtbase-everywhere-src-$version.tar.xz
      - qtbase.json
    cleanup:
      - /bin

  - name: qtshadertools
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=None
    sources:
      - type: archive
        url: https://download.qt.io/archive/qt/6.8/6.8.2/submodules/qtshadertools-everywhere-src-6.8.2.tar.xz
        sha256: d1d5f90e8885fc70d63ac55a4ce4d9a2688562033a000bc4aff9320f5f551871
        x-checker-data:
          type: anitya
          project-id: 7927
          url-template: https://download.qt.io/archive/qt/$major.$minor/$version/submodules/qtshadertools-everywhere-src-$version.tar.xz
    cleanup:
      - '*'

  - name: qtdeclarative
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=None
    sources:
      - type: archive
        url: https://download.qt.io/archive/qt/6.8/6.8.2/submodules/qtdeclarative-everywhere-src-6.8.2.tar.xz
        sha256: 144d876adc8bb55909735143e678d1e24eadcd0a380a0186792d88b731346d56
        x-checker-data:
          type: anitya
          project-id: 7927
          url-template: https://download.qt.io/archive/qt/$major.$minor/$version/submodules/qtdeclarative-everywhere-src-$version.tar.xz
    cleanup:
      - /bin

  - name: qtwayland
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=None
    sources:
      - type: archive
        url: https://download.qt.io/archive/qt/6.8/6.8.2/submodules/qtwayland-everywhere-src-6.8.2.tar.xz
        sha256: 5e46157908295f2bf924462d8c0855b0508ba338ced9e810891fefa295dc9647
        x-checker-data:
          type: anitya
          project-id: 7927
          url-template: https://download.qt.io/archive/qt/$major.$minor/$version/submodules/qtwayland-everywhere-src-$version.tar.xz
      - qtwayland.json
    cleanup:
      - /bin

  - name: qtimageformats
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=None
    sources:
      - type: archive
        url: https://download.qt.io/archive/qt/6.8/6.8.2/submodules/qtimageformats-everywhere-src-6.8.2.tar.xz
        sha256: d2a1bbb84707b8a0aec29227b170be00f04383fbf2361943596d09e7e443c8e1
        x-checker-data:
          type: anitya
          project-id: 7927
          url-template: https://download.qt.io/archive/qt/$major.$minor/$version/submodules/qtimageformats-everywhere-src-$version.tar.xz

  - name: qtsvg
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=None
    sources:
      - type: archive
        url: https://download.qt.io/archive/qt/6.8/6.8.2/submodules/qtsvg-everywhere-src-6.8.2.tar.xz
        sha256: aa2579f21ca66d19cbcf31d87e9067e07932635d36869c8239d4decd0a9dc1fa
        x-checker-data:
          type: anitya
          project-id: 7927
          url-template: https://download.qt.io/archive/qt/$major.$minor/$version/submodules/qtsvg-everywhere-src-$version.tar.xz

  - name: tg_owt
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=None
    sources:
      - type: git
        url: https://github.com/desktop-app/tg_owt.git
        commit: 8198c4d8b91e22d68eb5c7327fd408e3b6abcc79
        x-checker-data:
          type: json
          parent-id: telegram-desktop-git-0
          commit-data-url: >-
            "https://github.com/telegramdesktop/tdesktop/raw/\($parent.new.tag//$parent.current.tag)/snap/snapcraft.yaml"
          commit-query: >-
            .parts.webrtc."source-commit"
          version-data-url: >-
            "https://api.github.com/repos/desktop-app/tg_owt/commits/\($commit)"
          version-query: >-
            "desktop-app/tg_owt@\(.sha[0:7])"
          timestamp-data-url: >-
            "https://api.github.com/repos/desktop-app/tg_owt/commits/\($commit)"
          timestamp-query: >-
            .commit.committer.date
    cleanup:
      - '*'

  - name: telegram-desktop
    buildsystem: cmake-ninja
    builddir: true
    build-options:
      arch:
        aarch64:
          cflags: -g1
          cxxflags: -g1
    config-opts:
      - -DCMAKE_BUILD_TYPE=None
      - -DTDESKTOP_API_ID=611335
      - -DTDESKTOP_API_HASH=d524b414d21f4d37f08684c1df41ac9c
      - -DDESKTOP_APP_USE_PACKAGED_LAZY=ON
    sources:
      - type: git
        url: https://github.com/telegramdesktop/tdesktop.git
        commit: 46bf7781aaf8b0aa0a3d0b9371d6f3c41f34df7e
        tag: v5.10.7
        x-checker-data:
          type: json
          url: https://api.github.com/repos/telegramdesktop/tdesktop/releases
          tag-query: first | .tag_name
          timestamp-query: first | .published_at
          version-query: $tag | sub("^[vV]"; "")
      - type: shell
        commands:
          - sed -i '/-Werror/d' Telegram/ThirdParty/dispatch/cmake/modules/DispatchCompilerWarnings.cmake
